git config --global user.name "Jean"
git config --global user.email "zikvanz@gmail.com"

git init			(inica proyecto)
git status			(muestra el estado)
git add -A  o add arch.txt		(anade a listo)
git commit -m "mensaje"		(guarda)
git log				(lista de commits)
git checkout codcommit		(lleva a un commit anterior)
git checkout master		(va al ultimo commit)
git log > commits.txt		(genera un txt con todos los commits)
git reset --soft codcommit	(elimina el commit, sin tocar los archivos)
git reset --hard codcommit	(elimina commit y archivos)
git help
			
git commit --amend -m "Cambio en el h3"
git push origin master -f

RAMAS
git branch nombrerama		(crea un rama)
git branch			(muestra todas las ramas)
git checkout nombrerama 	(cambia a esa rama)
git merge nombrerama   		(fusiona la rama actual con nombrerama)
git branch -D nombrerama	(elimina la rama nombrerama)

git branch -a 			(muestra la rama oculta)


CLONAR
git clone urlproyecto

CONECTAR PROYECTO LOCAL A REMOTO
git remote add origin urlproyecto(conecta el rep local con el rep remote)
git remote -v			(muestra el rep remoto)
git remote remove origin	(elimina la conex con el  rep remoto)

SUBIR LOS CAMBIOS A GIT
git push origin master		(sube los cambios al rep remoto)

ISUUES
MILESTONES

TAGS
son commits, y podemos elegir una nombrandola como una version
git tag -a v1.0 -m "Mensaje" 		(nombra al ultimo commit como una version)
git tag -a v1.0 -m "Mensaje" codigocommit(para nombrar a un commit especifico como una version)
git tag v1.0				(es un tag simple sin mensaje)

ACTUALIZAR REP LOCAL
git fetch origin
git merge origin/master

git pull
993822516






commit
ir a la carpeta del proyecto

git status                    (archivos que han cambiado,incluye todos los cambios dentro de este directorio)
git add -A .                  (reconocera archivos eliminados, si no se pone solo se reconocera los archivos nuevos/modificados)
git status
git commit -m "modifique esto"(guardara los cambios en sus historial)
git push		      (subimos los cambios)

"A"=abrebiatura de all
"."=el directorio actual



Commit Anywhere

cd ~/mi-primer-blog
source mivenv/bin/activate
git pull
python manage.py collectstatic


si hay problemas con merge usar"
git checkout db.sqlite3


django 1.9.1
GIT
	username:zikvanz
	password:zhydovanarvain123456

PYTHONANYWHERE
	username:miblog
	password:zhydovanarvain


60 e3 27 4c ff 40   Jose Luis
e3 60 4c 27 40 ff

a0 ec 80 7e fe 54  Chino
EC A0 7E 80 54 FE